#pragma once

{% for include in includes %}
#include {{ include }}
{% endfor %}

namespace {{ namespace.split('::')[0] }} {
namespace {{ namespace.split('::')[1] }} {

{% if implementation.doc %}
/**
 * @brief {{ implementation.doc }}
 */
{% endif %}
class {{ implementation.name }} : public {{ class.name }} {
public:
    /**
     * @brief Construct a new {{ implementation.name }} object
     */
    {{ implementation.name }}({{ class.methods[0].params.split('=')[0].strip() }});

    {% for method in class.methods %}
    {% if method.virtual %}
    {% if method.doc %}
    /**
     * @brief {{ method.doc }}
     */
    {% endif %}
    {{ method.return }} {{ method.name }}({{ method.params }}) override;
    {% endif %}
    {% endfor %}

    ~{{ implementation.name }}() override;

private:
    {% for member in implementation.members %}
    {% if member.doc %}
    /// {{ member.doc }}
    {% endif %}
    {{ member.type }} {{ member.name }};
    {% endfor %}

    {% for method in implementation.methods %}
    {% if method.doc %}
    /**
     * @brief {{ method.doc }}
     */
    {% endif %}
    {{ method.return }} {{ method.name }}({{ method.params }});
    {% endfor %}
};

} // namespace {{ namespace.split('::')[1] }}
} // namespace {{ namespace.split('::')[0] }} 